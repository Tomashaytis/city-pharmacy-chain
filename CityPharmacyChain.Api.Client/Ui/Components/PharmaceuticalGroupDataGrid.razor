
@inject CityPharmacyChainApiWrapper Client
@inject NavigationManager NavManager

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h4>Таблица с данными о фармацевтических группах</h4>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary" Clicked="OpenCreateModal">
                    Добавить
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>" Data="@PharmaceuticalGroups" PageSize="40" Responsive Filterable>
            <DataGridNumericColumn TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>" Field="Item2.ProductCode" Caption="Код препарата" Editable FilterMethod="DataGridColumnFilterMethod.StartsWith" />
            <DataGridColumn TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>" Field="Item2.Name" Caption="Название" Editable FilterMethod="DataGridColumnFilterMethod.StartsWith" />
            <DataGridColumn TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>" Field="Item2.ProductGroup" Caption="Торговая группа" Editable FilterMethod="DataGridColumnFilterMethod.StartsWith" />
            <DataGridColumn TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>" Field="Item1.Name" Caption="Фармацевтическая группа" Editable FilterMethod="DataGridColumnFilterMethod.StartsWith" />
            <DataGridColumn Width="150px"
            Filterable="false"
            TItem="Tuple<PharmaceuticalGroupFullDto, ProductDto>"
            Field="Item1.PharmaceuticalGroupId"
            Caption="Действия">
                <DisplayTemplate>
                    <Dropdown>
                        <DropdownToggle Color="Color.Primary">
                            Действия
                        </DropdownToggle>
                        <DropdownMenu>
                            <DropdownItem Clicked="() => OpenEditPageAsync(context.Item1)">
                                Редактировать
                            </DropdownItem>
                            <DropdownItem Clicked="() => DeletePharmaceuticalGroupAsync(context.Item1)">
                                Удалить
                            </DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridCommandColumn />
        </DataGrid>
    </CardBody>
</Card>

<PharmaceuticalGroupCreateModal @ref="PharmaceuticalGroupCreateModal" PharmaceuticalGroupId="PharmaceuticalGroupId" OnPharmaceuticalGroupAdded="@HandlePharmaceuticalGroupAdded" />

@code {
    public List<Tuple<PharmaceuticalGroupFullDto, ProductDto>> PharmaceuticalGroups { get; set; } = [];

    [Parameter]
    public int? PharmaceuticalGroupId { get; set; }

    [Parameter]
    public EventCallback OnDataChanged { get; set; }

    private PharmaceuticalGroupCreateModal PharmaceuticalGroupCreateModal { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await RefreshPharmaceuticalGroupCollection();
        await base.OnInitializedAsync();
    }

    private void OpenEditPageAsync(PharmaceuticalGroupFullDto context)
    {
        NavManager.NavigateTo($"pharmaceutical-group/{context.PharmaceuticalGroupId}");
    }

    private async Task DeletePharmaceuticalGroupAsync(PharmaceuticalGroupFullDto context)
    {
        await Client.PharmaceuticalGroupDelete(context.PharmaceuticalGroupId);
        await RefreshPharmaceuticalGroupCollection();
        await OnDataChanged.InvokeAsync();
    }

    private async Task HandlePharmaceuticalGroupAdded()
    {
        await RefreshPharmaceuticalGroupCollection();
        await OnDataChanged.InvokeAsync();
    }

    private async Task OpenCreateModal() => await PharmaceuticalGroupCreateModal.Show();

    private async Task RefreshPharmaceuticalGroupCollection()
    {
        var pharmaceuticalGroups = (await Client.PharmaceuticalGroupGetAll()).ToList();
        PharmaceuticalGroups = [];
        foreach (var pharmaceuticalGroup in pharmaceuticalGroups)
        {
            PharmaceuticalGroups.Add(new Tuple<PharmaceuticalGroupFullDto, ProductDto>(pharmaceuticalGroup, await Client.ProductGetById(pharmaceuticalGroup.ProductId)));
        }
    }
}


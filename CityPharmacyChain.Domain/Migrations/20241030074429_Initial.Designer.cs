// <auto-generated />
using System;
using CityPharmacyChain.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityPharmacyChain.Domain.Migrations
{
    [DbContext(typeof(CityPharmacyChainContext))]
    [Migration("20241030074429_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PharmaceuticalGroup", b =>
                {
                    b.Property<int>("PharmaceuticalGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pharmaceutical_group_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PharmaceuticalGroupId"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("PharmaceuticalGroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("pharmaceutical_group");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.Pharmacy", b =>
                {
                    b.Property<int>("PharmacyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pharmacy_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PharmacyId"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<string>("DirectorFullName")
                        .HasColumnType("longtext")
                        .HasColumnName("director_full_name");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("PharmacyNumber")
                        .HasColumnType("int")
                        .HasColumnName("pharmacy_number");

                    b.Property<long?>("PhoneNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("phone_number");

                    b.HasKey("PharmacyId");

                    b.ToTable("pharmacy");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PharmacyProduct", b =>
                {
                    b.Property<int>("PharmacyProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pharmacy_product_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PharmacyProductId"));

                    b.Property<int?>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int")
                        .HasColumnName("pharmacy_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("PharmacyProductId");

                    b.HasIndex("PharmacyId");

                    b.HasIndex("ProductId");

                    b.ToTable("PharmacyProducts");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PriceListEntry", b =>
                {
                    b.Property<int>("PriceListEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("price_list_entry_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PriceListEntryId"));

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext")
                        .HasColumnName("manufacturer");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payment_type");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int")
                        .HasColumnName("pharmacy_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sale_date");

                    b.Property<int?>("SoldCount")
                        .HasColumnType("int")
                        .HasColumnName("sold_count");

                    b.HasKey("PriceListEntryId");

                    b.HasIndex("PharmacyId");

                    b.HasIndex("ProductId");

                    b.ToTable("price_list");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("ProductCode")
                        .HasColumnType("int")
                        .HasColumnName("product_code");

                    b.Property<string>("ProductGroup")
                        .HasColumnType("longtext")
                        .HasColumnName("product_group");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PharmaceuticalGroup", b =>
                {
                    b.HasOne("CityPharmacyChain.Domain.Entity.Product", "Product")
                        .WithMany("PharmaceuticalGroups")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PharmacyProduct", b =>
                {
                    b.HasOne("CityPharmacyChain.Domain.Entity.Pharmacy", "Pharmacy")
                        .WithMany("PharmacyProducts")
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityPharmacyChain.Domain.Entity.Product", "Product")
                        .WithMany("PharmacyProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.PriceListEntry", b =>
                {
                    b.HasOne("CityPharmacyChain.Domain.Entity.Pharmacy", "Pharmacy")
                        .WithMany("PriceListEntries")
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityPharmacyChain.Domain.Entity.Product", "Product")
                        .WithMany("PriceListEntries")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.Pharmacy", b =>
                {
                    b.Navigation("PharmacyProducts");

                    b.Navigation("PriceListEntries");
                });

            modelBuilder.Entity("CityPharmacyChain.Domain.Entity.Product", b =>
                {
                    b.Navigation("PharmaceuticalGroups");

                    b.Navigation("PharmacyProducts");

                    b.Navigation("PriceListEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
